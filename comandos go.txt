Run
> go run nome_arquivo.go

uso de pacotes
	dentro da pasta onde estão os pacotes:
	> go mod init nome_modulo
	
	criar o arquivo main e fazer o build
	> go build

pacotes externos
> go get github.com.badoux/checkmail

remover dependencias que nao estão sendo utilizadas
> go mod tidy

Aula 32 - aplicacao de linha de comando:
run
> go run main.go ip --host amazon.com.br
> go run main.go servidores --host amazon.com.br

testar todos os pacotes
-> ir para pasta main e fazer:
> go test ./...

rodar teste verbose:
> go test -v

teste com cobertura
> go test --cover

gerar arquivo teste de cobertura
> go test --coverprofile nome_arquivo.txt

ler arquivo teste de cobertura - listar funcoes testadas
> go tool cover --func=nome_arquivo.txt

ler arquivo de teste de cobertura - mostrar html com codigo testado e nao testado
>go tool cover --html=nome_arquivo.txt

MYSQL
> mysql -u root -p
> show databases;
> create database devbook;
> use devbook;
> create table usuarios(
-> id int auto_increment primary key,
-> nome varchar(50) not null,
-> email varchar(50) not null,
-> ) ENGINE=INNODB;

> show tables
> create user 'golang'@'localhost' identified by '123456';
> grant all privileges on devbook.* to 'golang'@'localhost';
> exit;

> mysql -u golang -p

instalar o driver do mysql
> go get github.com/go-sql-driver/mysql


---API---

inicializar o modulo api
> go mod init api

criar o main na pasta API(main.go)
instalar o mux no pacote API para utilizar o Router
> go get github.com/gorilla/mux

criar diretorio src e adicionar o router(router.go)
criar as rotas dentro do diretorio router
